[gd_scene load_steps=10 format=3 uid="uid://dtmqtfk5rkkju"]

[ext_resource type="Script" path="res://Scripts/PlayerController.gd" id="1_hqgnv"]
[ext_resource type="Texture2D" uid="uid://kmvbnwa3b4wd" path="res://icon.svg" id="2_x42as"]
[ext_resource type="Texture2D" uid="uid://c2gt87kl7ptv5" path="res://Textures/Sprites/player.png" id="3_4dwc7"]

[sub_resource type="Shader" id="Shader_xay5t"]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/energy-beams

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;
render_mode blend_add; // Remove this if you want to use HDR glow instead (use \"Glow\" and \"Outline Glow\" sliders)

uniform int beams = 2; // How many beams the energy field should have

uniform float energy = 3.0; // How much the beams will travel up and down
uniform int roughness : hint_range(1, 10) = 3; // How compact the noise texture will be
uniform int frequency = 10; // Amount of \"ripples\" in the beams

uniform float speed = 1.0; // Animation speed
uniform float thickness : hint_range(0.0, 0.1) = 0.006; // Thickness of the main beam
uniform float outline_thickness : hint_range(0.0, 0.1) = 0.03; //Thickness of the outline color
uniform float beam_difference : hint_range(0.0, 1.0) = 0.0; // The thickness difference between the main beam and the other, if there are more than one beam. The closer to 1 the smaller the thickness difference.

uniform float glow : hint_range(0.0, 3.0) = 0.0; // Use together with WorldEnvironment's Glow feature
uniform float outline_glow : hint_range(0.0, 3.0) = 0.0;

uniform vec4 color = vec4(0.91, 1.0, 1.0, 1.0);
uniform vec4 outline_color = vec4(0.5, 1.0, 0.96, 1.0);

uniform float progress : hint_range(0.0, 1.0) = 1.0;

uniform float y_offset : hint_range (-0.5, 0.5) = 0.0; // Position of the beam
uniform float fixed_edge_size : hint_range(0.0, 0.5) = 0.05; // How close to the edge should the beam be still before the animatino starts
uniform vec2 noise_scale = vec2(1.0); // If the object (for example the ColorRect or Sprite node) is compressed use this to compensate for the noise texture being compressed.

float random(vec2 uv) {
    return fract(sin(dot(uv.xy,
        vec2(12.9898,78.233))) *
            43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    // Four corners in 2D of a tile
    float a = random(uv_index);
    float b = random(uv_index + vec2(1.0, 0.0));
    float c = random(uv_index + vec2(0.0, 1.0));
    float d = random(uv_index + vec2(1.0, 1.0));

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix(a, b, blur.x) +
            (c - a) * blur.y * (1.0 - blur.x) +
            (d - b) * blur.x * blur.y;
}

float fbm(vec2 uv, float time) {
    int octaves = roughness;
    float amp = 0.01 * energy * progress;
    float freq = float(frequency);
	float value = 0.0;
	
    for(int i = 0; i < octaves; i++) {
        value += amp * noise(freq * vec2(uv.x, uv.y + time));
        amp *= 0.5;
        freq *= 2.0;
    }
    return value;
}

vec4 difference(vec4 base, vec4 blend){
	return abs(base - blend);
}

vec4 bolt(vec2 uv, float time, float i)
{
	// Setup the beam locking to the edges.
	float falloff = smoothstep(0.0, fixed_edge_size, uv.x) * smoothstep(0.0, fixed_edge_size, 1.0 - uv.x);
	
	// Use Fractal Brownian Motion to create a \"cloud texture\" and use Difference blend mode to make the beam
	vec4 clouds = vec4(fbm((uv + vec2(i) ) * noise_scale, time * speed)) * falloff;
	vec4 diff_clouds = difference(clouds, vec4(uv.y - 0.5 + y_offset + (uv.y * falloff * 0.02 * energy * progress)));
	
	// Create a new noise to mask the beams on low \"progress\" values. To make a \"turn-off\" effect more visually interesting.
	vec4 clouds2 = vec4(fbm((uv * 2.0) * noise_scale, time * 1.)) * 5.0;
	diff_clouds += smoothstep(0.0, 0.8, clouds2) * 0.1 * (1.-progress);
	
	// Set thickness of the beams. First beam is the Thickness size and all following beams are sized with beam_difference
	float thickness2 =  1. - ( thickness / (min(i + beam_difference, 1.0) + (1.0-beam_difference))) * progress ;
	vec4 beam = clamp(smoothstep(thickness2, thickness2 + 0.005 * progress, 1.0 - diff_clouds), vec4(0.0), vec4(1.0));
	
	//Set the beam outlines
	vec4 beam_outline;
	float outline = thickness2 - (outline_thickness * progress);
	beam_outline = clamp(smoothstep(outline, outline + 0.04, 1.0 - diff_clouds), 0.0, 1.0);
	beam_outline = clamp(beam_outline - beam, 0.0, 1.0);
	
	// Merge the beam and the outline and return to the fragment function
	return (beam * (color + vec4(glow, glow, glow, 0.))) + (beam_outline * (outline_color + vec4(outline_glow, outline_glow, outline_glow, 0.)));
}

void fragment()
{	
	vec4 beam = vec4(0.0);
	
	for (int i = 0; i < beams; i++){
		beam = max(beam, bolt(UV, TIME, float(i)));
	}
	
	COLOR = beam;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qrrcl"]
shader = SubResource("Shader_xay5t")
shader_parameter/beams = 1
shader_parameter/energy = 4.268
shader_parameter/roughness = 10
shader_parameter/frequency = 27
shader_parameter/speed = 0.198
shader_parameter/thickness = 0.025
shader_parameter/outline_thickness = 0.03
shader_parameter/beam_difference = 0.0
shader_parameter/glow = 0.0
shader_parameter/outline_glow = 0.0
shader_parameter/color = Vector4(0.91, 1, 1, 1)
shader_parameter/outline_color = Vector4(0.5, 1, 0.96, 1)
shader_parameter/progress = 1.0
shader_parameter/y_offset = 0.0
shader_parameter/fixed_edge_size = 0.05
shader_parameter/noise_scale = Vector2(1, 1)

[sub_resource type="CircleShape2D" id="CircleShape2D_ddmak"]
radius = 22.0

[sub_resource type="CircleShape2D" id="CircleShape2D_7ry2g"]
radius = 16.0

[sub_resource type="GDScript" id="GDScript_ealuc"]
script/source = "extends Camera2D

var first_grab_pos = Vector2()
var first_grab = true

@onready var cam = $\".\"

func _physics_process(delta):
	cam.offset = (get_global_mouse_position() - $\".\".global_position) * 0.2

func _input(event):
	if event.is_action_pressed(\"tz_zoom_in\"):
		cam.zoom.x = clamp(cam.zoom.x * 0.8, 0.1, 4.0)
		cam.zoom.y = clamp(cam.zoom.y * 0.8, 0.1, 4.0)
	elif event.is_action_pressed(\"tz_zoom_out\"):
		cam.zoom.x = clamp(cam.zoom.x * 1.2, 0.1, 4.0)
		cam.zoom.y = clamp(cam.zoom.y * 1.2, 0.1, 4.0)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_0sho6"]
size = Vector2(18, 18)

[node name="player" type="CharacterBody2D" groups=["shipment_body"]]
script = ExtResource("1_hqgnv")

[node name="line" type="Line2D" parent="."]
material = SubResource("ShaderMaterial_qrrcl")
points = PackedVector2Array(0, 0, 0, 0)
width = 60.0
texture = ExtResource("2_x42as")
texture_mode = 2

[node name="pl" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="pl"]
shape = SubResource("CircleShape2D_ddmak")

[node name="Player2d" type="Sprite2D" parent="."]
texture_filter = 1
rotation = 1.5708
texture = ExtResource("3_4dwc7")
offset = Vector2(0, -3)

[node name="CollisionShape2D" type="CollisionShape2D" parent="." groups=["shipment_body"]]
shape = SubResource("CircleShape2D_7ry2g")
debug_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="Camera2D" type="Camera2D" parent="."]
position_smoothing_enabled = true
position_smoothing_speed = 8.0
script = SubResource("GDScript_ealuc")

[node name="inventory" type="Node2D" parent="."]
visible = false
z_index = 11

[node name="Slot0" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(-28, -40)

[node name="count" type="Label" parent="inventory/Slot0"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot0"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot0"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot1" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(-37, -16)

[node name="count" type="Label" parent="inventory/Slot1"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot1"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot1"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot2" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(-37, 8)

[node name="count" type="Label" parent="inventory/Slot2"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot2"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot2"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot3" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(-29, 32)

[node name="count" type="Label" parent="inventory/Slot3"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot3"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot3"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot4" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(14, -40)

[node name="count" type="Label" parent="inventory/Slot4"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot4"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot4"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot5" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(23, -16)

[node name="count" type="Label" parent="inventory/Slot5"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot5"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot5"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot6" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(23, 8)

[node name="count" type="Label" parent="inventory/Slot6"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot6"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot6"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")

[node name="Slot7" type="Area2D" parent="inventory" groups=["inventory"]]
position = Vector2(15, 32)

[node name="count" type="Label" parent="inventory/Slot7"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 6.0
offset_top = 3.0
offset_right = 54.0
offset_bottom = 63.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.25, 0.25)
theme_override_font_sizes/font_size = 40

[node name="Sprite2D" type="Sprite2D" parent="inventory/Slot7"]
position = Vector2(7, 4)

[node name="CollisionShape2D" type="CollisionShape2D" parent="inventory/Slot7"]
position = Vector2(7, 4)
shape = SubResource("RectangleShape2D_0sho6")
